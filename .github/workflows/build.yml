name: Main Branch | Build, Test and Push to Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          .cargo
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      run: rustup update stable && rustup default stable

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Set up PostgreSQL
      run: |
        sudo systemctl start postgresql.service
        sudo -u postgres createuser --createdb --superuser runner
        sudo -u postgres psql -c "ALTER USER runner PASSWORD 'password';"
        createdb auth_service_test

    - name: Build and test auth-service code
      working-directory: .
      run: |
        export JWT_SECRET=secret
        export COOKIE_DOMAIN=127.0.0.1
        export DATABASE_URL="postgres://runner:password@localhost:5432/auth_service_test"

        cargo install sqlx-cli --no-default-features --features native-tls,postgres
        sqlx migrate run
        cargo sqlx prepare
        export SQLX_OFFLINE=true
        cargo build --verbose
        cargo test --verbose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/bake-action@v2.3.0
      with:
        push: true
        files: |
          compose.yml
          compose.override.yml
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max
